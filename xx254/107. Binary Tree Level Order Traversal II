/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> res = new ArrayList<List<Integer>>(); 
        if(root == null)
            return res;
 
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.offer(root);
        
        while(!q.isEmpty()){
            
            ArrayList<Integer> path = new ArrayList<Integer>();
            
            int size = q.size();
            for(int i = 0; i < size; i++){
                TreeNode node = q.poll();
                path.add(node.val);
                if(node.left != null)
                    q.add(node.left);
                if(node.right != null)
                    q.add(node.right);
            }
            res.add(0, path);                                   //ArrayList可以从前面插入元素
        }
        return res;
    }
}
