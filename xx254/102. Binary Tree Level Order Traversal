/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        //ArrayList res = new ArrayList();                      //ArrayList也可以这么初始化
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        
        if(root == null)
            return res;
        
        
        Queue<TreeNode> queue = new LinkedList<TreeNode>();     //Queue要用LinkedList
        queue.offer(root);                      
        
        while(!queue.isEmpty()){
            ArrayList<Integer> path = new ArrayList<Integer>();
            int size = queue.size();                            //不能在for循环中定义，因为queue的大小会变!!!
            for(int i = 0; i < size; i++){
                TreeNode node = queue.poll();                   //所有的node出队列，放在一个path之中
                path.add(node.val);
                if(node.left != null){
                    queue.offer(node.left);
                }
                if(node.right != null){
                    queue.offer(node.right);
                }
            }
            res.add(path);
        }
        return res;
    }
}
