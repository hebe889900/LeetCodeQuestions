public class Solution {  
    public int minDistance(String word1, String word2) {  
        int m = word1.length();  
        int n = word2.length();  
        int[][] dp = new int[m+1][n+1];         // 多出一位
        dp[0][0] = 0;  
        
        // Initialization： 从null变
        for(int i=1;i<=m;i++)  
            dp[i][0] = dp[i-1][0] + 1;  
        for(int j=1;j<=n;j++)  
            dp[0][j] = dp[0][j-1] + 1;  
            
        for(int i=1;i<=m;i++)  
            for(int j=1;j<=n;j++){  
                //相等则和前一位需要处理的次数相同
                if (word1.charAt(i-1)==word2.charAt(j-1))  
                    dp[i][j] = dp[i-1][j-1];  
                //不相等则insert/replace/delete里面挑一个 +1
                else dp[i][j] = 1 + Math.min(dp[i-1][j-1],Math.min(dp[i-1][j],dp[i][j-1]));              
            }  
        return dp[m][n];  
    }  
}
