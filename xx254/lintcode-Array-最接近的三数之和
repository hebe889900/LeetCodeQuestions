public class Solution {
    /**
     * @param numbers: Give an array numbers of n integer
     * @param target : An integer
     * @return : return the sum of the three integers, the sum closest target.
     */
    public int threeSumClosest(int[] numbers, int target) {
        if(numbers == null || numbers.length < 3)
            return 0;           //confirm
            
        int dif = Integer.MAX_VALUE;
        int sum = 0, res = 0;
        Arrays.sort(numbers);   //confirm
        for(int i = 0; i < numbers.length - 2; i++){
            int start = i + 1;
            int end = numbers.length - 1;
            while(start < end){
                sum = numbers[i] + numbers[start] + numbers[end];
                //dif = Math.min(dif, Math.abs(target - sum));  //Math.abs()
                //不止要维护最小值，还要维护此时sum
                if(Math.abs(target - sum) < dif){
                    dif = Math.abs(target - sum);
                    res = sum;
                }
                if(sum > target) 
                    end--;
                else 
                    start++;
            }
        }
        return res;
    }
}
